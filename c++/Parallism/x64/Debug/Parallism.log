  正在扫描源以查找模块依赖项...
  main.cpp
D:\Github-storage\StudyNotes\c++\Parallism\call_thread_guard.h(20,30): warning C4227: 使用了记时错误: 忽略引用上的限定符
  (编译源文件“main.cpp”)
  
D:\Github-storage\StudyNotes\c++\Parallism\call_thread_guard.h(21,42): warning C4227: 使用了记时错误: 忽略引用上的限定符
  (编译源文件“main.cpp”)
  
D:\Github-storage\StudyNotes\c++\Parallism\transferring_thread_ownership.h(9,10): warning C4477: “printf”: 格式字符串“%d”需要类型“int”的参数，但可变参数 1 拥有了类型“std::thread::id”
  (编译源文件“main.cpp”)
  
D:\Github-storage\StudyNotes\c++\Parallism\transferring_thread_ownership.h(14,10): warning C4477: “printf”: 格式字符串“%d”需要类型“int”的参数，但可变参数 1 拥有了类型“std::thread::id”
  (编译源文件“main.cpp”)
  
D:\Github-storage\StudyNotes\c++\Parallism\useful_functions_in_thread.h(7,10): warning C4477: “printf”: 格式字符串“%d”需要类型“int”的参数，但可变参数 1 拥有了类型“std::thread::id”
  (编译源文件“main.cpp”)
  
D:\Github-storage\StudyNotes\c++\Parallism\useful_functions_in_thread.h(15,10): warning C4477: “printf”: 格式字符串“%d”需要类型“int”的参数，但可变参数 1 拥有了类型“std::thread::id”
  (编译源文件“main.cpp”)
  
D:\Github-storage\StudyNotes\c++\Parallism\useful_functions_in_thread.h(18,10): warning C4477: “printf”: 格式字符串“%d”需要类型“int”的参数，但可变参数 1 拥有了类型“std::thread::id”
  (编译源文件“main.cpp”)
  
D:\Github-storage\StudyNotes\c++\Parallism\useful_functions_in_thread.h(21,10): warning C4477: “printf”: 格式字符串“%d”需要类型“int”的参数，但可变参数 1 拥有了类型“std::thread::id”
  (编译源文件“main.cpp”)
  
D:\Github-storage\StudyNotes\c++\Parallism\Using_mutex.h(20,12): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
  (编译源文件“main.cpp”)
  
D:\Github-storage\StudyNotes\c++\Parallism\dead_lock.h(20,28): warning C4227: 使用了记时错误: 忽略引用上的限定符
  (编译源文件“main.cpp”)
  
D:\Github-storage\StudyNotes\c++\Parallism\dead_lock.h(22,39): warning C4227: 使用了记时错误: 忽略引用上的限定符
  (编译源文件“main.cpp”)
  
D:\Github-storage\StudyNotes\c++\Parallism\dead_lock.h(74,10): warning C4477: “printf”: 格式字符串“%d”需要类型“int”的参数，但可变参数 1 拥有了类型“std::thread::id”
  (编译源文件“main.cpp”)
  
D:\Github-storage\StudyNotes\c++\Parallism\dead_lock.h(77,10): warning C4477: “printf”: 格式字符串“%d”需要类型“int”的参数，但可变参数 1 拥有了类型“std::thread::id”
  (编译源文件“main.cpp”)
  
D:\Github-storage\StudyNotes\c++\Parallism\dead_lock.h(86,10): warning C4477: “printf”: 格式字符串“%d”需要类型“int”的参数，但可变参数 1 拥有了类型“std::thread::id”
  (编译源文件“main.cpp”)
  
D:\Github-storage\StudyNotes\c++\Parallism\dead_lock.h(89,10): warning C4477: “printf”: 格式字符串“%d”需要类型“int”的参数，但可变参数 1 拥有了类型“std::thread::id”
  (编译源文件“main.cpp”)
  
D:\Github-storage\StudyNotes\c++\Parallism\unique_locks.h(20,28): warning C4227: 使用了记时错误: 忽略引用上的限定符
  (编译源文件“main.cpp”)
  
D:\Github-storage\StudyNotes\c++\Parallism\unique_locks.h(22,39): warning C4227: 使用了记时错误: 忽略引用上的限定符
  (编译源文件“main.cpp”)
  
D:\Github-storage\StudyNotes\c++\Parallism\promise_send_exception.h(29,28): warning C4244: “参数”: 从“double”转换到“_Ty”，可能丢失数据
D:\Github-storage\StudyNotes\c++\Parallism\promise_send_exception.h(29,28): warning C4244:         with
D:\Github-storage\StudyNotes\c++\Parallism\promise_send_exception.h(29,28): warning C4244:         [
D:\Github-storage\StudyNotes\c++\Parallism\promise_send_exception.h(29,28): warning C4244:             _Ty=int
D:\Github-storage\StudyNotes\c++\Parallism\promise_send_exception.h(29,28): warning C4244:         ]
  (编译源文件“main.cpp”)
  
D:\Github-storage\StudyNotes\c++\Parallism\Using_Parallel_STL.h(23,10): warning C4477: “printf”: 格式字符串“%lld”需要类型“__int64”的参数，但可变参数 4 拥有了类型“_To”
D:\Github-storage\StudyNotes\c++\Parallism\Using_Parallel_STL.h(23,10): warning C4477:         with
D:\Github-storage\StudyNotes\c++\Parallism\Using_Parallel_STL.h(23,10): warning C4477:         [
D:\Github-storage\StudyNotes\c++\Parallism\Using_Parallel_STL.h(23,10): warning C4477:             _To=std::chrono::milliseconds
D:\Github-storage\StudyNotes\c++\Parallism\Using_Parallel_STL.h(23,10): warning C4477:         ]
  (编译源文件“main.cpp”)
  
D:\Github-storage\StudyNotes\c++\Parallism\parallel_find_example.h(174,14): warning C4267: “=”: 从“size_t”转换到“_Ty”，可能丢失数据
D:\Github-storage\StudyNotes\c++\Parallism\parallel_find_example.h(174,14): warning C4267:         with
D:\Github-storage\StudyNotes\c++\Parallism\parallel_find_example.h(174,14): warning C4267:         [
D:\Github-storage\StudyNotes\c++\Parallism\parallel_find_example.h(174,14): warning C4267:             _Ty=int
D:\Github-storage\StudyNotes\c++\Parallism\parallel_find_example.h(174,14): warning C4267:         ]
  (编译源文件“main.cpp”)
  
D:\Github-storage\StudyNotes\c++\Parallism\parallel_find_example.h(185,8): warning C4834: 放弃具有 [[nodiscard]] 属性的函数的返回值
  (编译源文件“main.cpp”)
  
D:\Github-storage\StudyNotes\c++\Parallism\parallel_find_example.h(190,8): warning C4834: 放弃具有 [[nodiscard]] 属性的函数的返回值
  (编译源文件“main.cpp”)
  
D:\Github-storage\StudyNotes\c++\Parallism\parallel_find_example.h(195,8): warning C4834: 放弃具有 [[nodiscard]] 属性的函数的返回值
  (编译源文件“main.cpp”)
  
D:\Github-storage\StudyNotes\c++\Parallism\parallel_matrix.h(141,26): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
  (编译源文件“main.cpp”)
  
D:\Github-storage\StudyNotes\c++\Parallism\parallel_matrix.h(157,30): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
  (编译源文件“main.cpp”)
  
D:\Github-storage\StudyNotes\c++\Parallism\lazy_generator.h(97,5): warning C4033: “lazy_generator::getNext”必须返回值
  (编译源文件“main.cpp”)
  D:\Github-storage\StudyNotes\c++\Parallism\lazy_generator.h(97,5):
  当承诺类型“lazy_generator::Generator<int>::promise_type”未声明 "return_void" 时，从协同例程结果末尾关闭流会导致未定义的行为
  
D:\Github-storage\StudyNotes\c++\Parallism\Atomic_example.h(354,20): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
  (编译源文件“main.cpp”)
  
D:\Github-storage\StudyNotes\c++\Parallism\thread_pool.h(112,12): warning C4477: “printf”: 格式字符串“%d”需要类型“int”的参数，但可变参数 2 拥有了类型“std::thread::id”
  (编译源文件“main.cpp”)
  
D:\Github-storage\StudyNotes\c++\Parallism\thread_safe_queue.h(133,10): error C2280: “my_thread_pool_with_waiting_threads::function_wrapper &my_thread_pool_with_waiting_threads::function_wrapper::operator =(const my_thread_pool_with_waiting_threads::function_wrapper &)”: 尝试引用已删除的函数
  (编译源文件“main.cpp”)
  D:\Github-storage\StudyNotes\c++\Parallism\thread_pool.h(182,2):
  编译器已在此处生成“my_thread_pool_with_waiting_threads::function_wrapper::operator =”
  D:\Github-storage\StudyNotes\c++\Parallism\thread_pool.h(182,2):
  “my_thread_pool_with_waiting_threads::function_wrapper &my_thread_pool_with_waiting_threads::function_wrapper::operator =(const my_thread_pool_with_waiting_threads::function_wrapper &)”: 由于“my_thread_pool_with_waiting_threads::function_wrapper”具有用户定义的 移动构造函数，因此已隐式删除函数
  D:\Github-storage\StudyNotes\c++\Parallism\thread_safe_queue.h(133,10):
  模板实例化上下文(最早的实例化上下文)为
  	D:\Github-storage\StudyNotes\c++\Parallism\thread_pool.h(191,64):
  	查看对正在编译的 类 模板 实例化“thread_safe_queue_space::thread_safe_queue<my_thread_pool_with_waiting_threads::function_wrapper>”的引用
  	D:\Github-storage\StudyNotes\c++\Parallism\thread_safe_queue.h(126,8):
  	在编译 类 模板 成员函数“bool thread_safe_queue_space::thread_safe_queue<my_thread_pool_with_waiting_threads::function_wrapper>::try_pop(T &)”时
          with
          [
              T=my_thread_pool_with_waiting_threads::function_wrapper
          ]
  		D:\Github-storage\StudyNotes\c++\Parallism\thread_pool.h(208,5):
  		请参阅 "my_thread_pool_with_waiting_threads::thread_pool::worker_thread" 中对 "thread_safe_queue_space::thread_safe_queue<my_thread_pool_with_waiting_threads::function_wrapper>::try_pop" 的第一个引用
  
